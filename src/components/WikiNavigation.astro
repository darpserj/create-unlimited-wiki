---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
const wiki = await getCollection("wiki");
import logo from "@/assets/brand/main-logo-wo-minecraft.png";
import { Image } from "astro:assets";
import button from "./Button/Button";
import { Icon } from "astro-icon/components";

const currentUrl = Astro.url.pathname;
console.log(currentUrl);

const postsByCategory = wiki.reduce(
  (acc, post) => {
    if (!acc[post.data.category]) {
      acc[post.data.category] = [];
    }
    acc[post.data.category].push(post);
    return acc;
  },
  {} as { [key: string]: CollectionEntry<"wiki">[] },
);
---

<nav class="shadow-2xl shadow-amber-950 bg-zinc-800 bg-blend-soft-light lg:max-w-96 lg:h-full lg:min-h-screen">
  <div class="container mx-auto p-4 flex items-center justify-between lg:items-start lg:justify-normal">
    <a href="/create-unlimited-wiki">
      <Image src={logo} alt="Create Unlimited Logo" class={`max-w-56 lg:max-w-full`} />
    </a>
    <button class={button({ intent: "outline", width: "auto", size: "sm", class: "lg:hidden" })} id="wikiNavButton">
      <Icon name={`bxs:dock-top`} class="text-5xl" aria-hidden="true" />
    </button>
  </div>
  <ul id="wikiNavMenu" class="space-y-4 lg:row-span-full border-t-2 border-cu-primary py-4 hidden lg:block">
    {
      Object.entries(postsByCategory).map(([category, posts]) => (
        <li class="px-4 ">
          <h2 class="text-lg lg:text-2xl mb-2  rounded py-1 px-2  font-bold ">{category.toUpperCase()}</h2>
          <ul class="flex flex-col gap-2 ml-4 ">
            {posts.map((post) => (
              <li class={` p-2 flex  bg-cu-background wikiItem rounded ${currentUrl.includes(post.slug) && `bg-cu-primary text-cu-background`}`}>
                <a href={`/create-unlimited-wiki/wiki/${category}/${post.slug}`} class="hover:underline">
                  {post.data.title}
                </a>
              </li>
            ))}
          </ul>
        </li>
      ))
    }
  </ul>
</nav>

<script>
  const wikiNavButton = document.querySelector<HTMLButtonElement>("#wikiNavButton");
  const wikiNavMenu = document.querySelector<HTMLUListElement>("#wikiNavMenu");

  wikiNavButton?.addEventListener("click", () => {
    wikiNavMenu?.classList.toggle("hidden");
  });
</script>
